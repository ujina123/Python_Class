'''
## 함수 작성

def 함수이름([매개변수1, 매개변수2, ...]):
    문장1
    문장2
    ...
    [return 반환값]

## 함수 호출 (call)
함수이름()
함수이름(인수1,인수2, ...) #=> 함수인수를 위치 기반으로 전달

## 함수의 매개변수들
## 디폴트 매개변수 : 앞쪽에 올 수 없다.
def 함수이름([매개변수1, 매개변수2=값, ...]):
    pass

함수이름(인수1, 인수2)
함수이름(인수1)

## 가변길이 매개변수 : *args, **kwargs (키 = 값)
def 함수이름(*매개변수):
    for arg in 매개변수:
        pass

함수이름(인수=값1, 인수2=값2, ...)

## 함수 반환값 : return
## 1개 이상

def 함수이름([매개변수1, 매개변수2, ...]):
    return 값1

def 함수이름([매개변수1, 매개변수2, ...]):
    return 값1, 값2, 값3, ...

## 반환값이 여러개인 경우 : 튜플 형태로 반환
변수 = 함수이름() # tuple
변수1, 변수2 = 함수이름()

## 함수 내부에서만 사용되는 변수 : 지역 변수(local variable)
## 함수 내부에서만 사용되고 함수 종료 후에는 사라진다.
## 같은 이름의 함수외부변수 (전역변수)가 있는 경우 함수 내부의 변수가 우선적용
## 함수 내부에서 변수가 없고, 외부의 변수를 내부에서 사용
## 함수 내부에서 전역변수를 변경할 수 없다
## 함수 내부에서 전역변수를 변경하려면 내부에서 global 키워드를 사용해서 변경

# 함수의 키워드 인수
함수이름(매개변수3 = 값1, 매개변수2 = 값, ...)
'''